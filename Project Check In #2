Documentation File: 
Instructions: Please click the “start” button to begin your quiz! Once you begin, please choose the best answer as it pertains to you. Based on your answers, you will find out which one of the four Hogwarts Houses you have been sorted into after the 7 questions!
Questions:
Which of the following colors do you like the most?
-Red
-Blue
-Green 
-White/yellow
Which of the following animals do you like the most?
-Eagle
-Lion
-Snake
-Badger 
Which of the following Harry Potter characters is your favorite?
-Harry Potter
-Luna Lovegood
-Draco Malfoy
-Cedric Diggory
What do you like to do in your free time?
-Read a book
-Watch TV on the couch
-Play sports
-Work on an art project 
Which of the following classes do you like the most?
-Math
-History
-English/reading
-Physical Education
If you were a wizard, what class would you be most interested in taking?
-History of Magic
-Herbology 
-Defense Against the Dark Arts
-Care of Magical Creatures
If you had to describe yourself in one word, which one would it be?
-Brave
-Loyal
-Intelligent
-Ambitious 

Python Script File:
We can use if/else statements to sort the subjects into a Hogwarts House depending on their answers to each of the questions. 
Create a method in Display called init_window() that is called from Display's init method. Have that method:
rename the window "Hogwarts Sorting Hat Quiz"
use a class attribute called screen_size, set to (800,600), to configure the size of the tkinter window
creates two frames in the window, one called "rHogwarts Sorting Hat_frame" and one called "interface_frame". Use .grid() to position the interface frame at the bottom. Make that frame 100 pixels tall, and the runner frame the remainder (700). But code this using the screen_size variable, not by hard-coding 700. This way if the screen size is changed, the frames will stay the correct size.
Create a method called create_interface_frame that:
add the buttons to the interface frame
Change the appearance of the buttons (size, shape, color, etc.) and arrange these buttons in the interface frame in a manner of your choosing.
Does the questions in order with answers to click
Give an answer at the end

import tkinter as tk
from PIL import Image, ImageTk

class SortingHatQuiz:
    def __init__(self, root):
        self.root = root
        self.init_window()

    def init_window(self):
        self.root.title("Sorting Hat Quiz")
        self.screen_size = (800, 600)
        width, height = self.screen_size
        self.root.geometry(f"{width}x{height}")

        # Load the background image
        bg_image = Image.open("HP_Sorting_Background.png")
        bg_image = bg_image.resize((width, height), Image.ANTIALIAS)
        self.bg_image = ImageTk.PhotoImage(bg_image)

        # Create a Canvas widget for the background image
        self.canvas = tk.Canvas(self.root, width=width, height=height)
        self.canvas.pack()

        # Display the background image
        self.canvas.create_image(0, 0, image=self.bg_image, anchor="nw")

        # Display welcome message
        welcome_label = tk.Label(self.root, text="Welcome to the Harry Potter Sorting Hat Quiz!", font=("Helvetica", 16))
        welcome_label.place(relx=0.5, rely=0.5, anchor="center")

def main():
    # Create the main window
    root = tk.Tk()
    sorting_hat_quiz = SortingHatQuiz(root)
    root.mainloop()

if __name__ == "__main__":
    main()

So far this code opens up a tkinter window, has background picture and says welcome to the quiz







Test File: 
To test the entire functionality the program the user should be able to see questions, answer from choices and move onto the next questions and get a sorting to a house at the end based on their answers. This should all run smoothly and quickly.

